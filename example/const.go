package example

type TestArticleConst int32

type TestConceptConst int32

const ARTICLE_TIMESHT_WORKING = TestArticleConst(80001)
const ARTICLE_PAYMENT_SALARY = TestArticleConst(80002)
const ARTICLE_PAYMENT_BONUS = TestArticleConst(80003)
const ARTICLE_PAYMENT_BARTER = TestArticleConst(80004)
const ARTICLE_ALLOWCE_HOFFICE = TestArticleConst(80005)
const ARTICLE_HEALTH_INSBASE = TestArticleConst(80006)
const ARTICLE_SOCIAL_INSBASE = TestArticleConst(80007)
const ARTICLE_HEALTH_INSPAYM = TestArticleConst(80008)
const ARTICLE_SOCIAL_INSPAYM = TestArticleConst(80009)
const ARTICLE_TAXING_ADVBASE = TestArticleConst(80010)
const ARTICLE_TAXING_ADVPAYM = TestArticleConst(80011)
const ARTICLE_INCOME_GROSS = TestArticleConst(80012)
const ARTICLE_INCOME_NETTO = TestArticleConst(80013)

const CONCEPT_TIMESHT_WORKING = TestConceptConst(80001)
const CONCEPT_AMOUNT_BASIS = TestConceptConst(80002)
const CONCEPT_AMOUNT_FIXED = TestConceptConst(80003)
const CONCEPT_HEALTH_INSBASE = TestConceptConst(80006)
const CONCEPT_SOCIAL_INSBASE = TestConceptConst(80007)
const CONCEPT_HEALTH_INSPAYM = TestConceptConst(80008)
const CONCEPT_SOCIAL_INSPAYM = TestConceptConst(80009)
const CONCEPT_TAXING_ADVBASE = TestConceptConst(80010)
const CONCEPT_TAXING_ADVPAYM = TestConceptConst(80011)
const CONCEPT_INCOME_GROSS = TestConceptConst(80012)
const CONCEPT_INCOME_NETTO = TestConceptConst(80013)

const (
	RESULT_VALUE_ZERO int32 = 0
	RESULT_BASIS_ZERO int32 = 0
	RESULT_DESCRIPTION_EMPTY string = ""
)

func (tac TestArticleConst) Id() int32 {
	return int32(tac)
}

func (tac TestArticleConst) String() string {
	switch tac {
	case ARTICLE_TIMESHT_WORKING:
		return "ARTICLE_TIMESHT_WORKING"
	case ARTICLE_PAYMENT_SALARY:
		return "ARTICLE_PAYMENT_SALARY"
	case ARTICLE_PAYMENT_BONUS:
		return "ARTICLE_PAYMENT_BONUS"
	case ARTICLE_PAYMENT_BARTER:
		return "ARTICLE_PAYMENT_BARTER"
	case ARTICLE_ALLOWCE_HOFFICE:
		return "ARTICLE_ALLOWCE_HOFFICE"
	case ARTICLE_HEALTH_INSBASE:
		return "ARTICLE_HEALTH_INSBASE"
	case ARTICLE_SOCIAL_INSBASE:
		return "ARTICLE_SOCIAL_INSBASE"
	case ARTICLE_HEALTH_INSPAYM:
		return "ARTICLE_HEALTH_INSPAYM"
	case ARTICLE_SOCIAL_INSPAYM:
		return "ARTICLE_SOCIAL_INSPAYM"
	case ARTICLE_TAXING_ADVBASE:
		return "ARTICLE_TAXING_ADVBASE"
	case ARTICLE_TAXING_ADVPAYM:
		return "ARTICLE_TAXING_ADVPAYM"
	case ARTICLE_INCOME_GROSS:
		return "ARTICLE_INCOME_GROSS"
	case ARTICLE_INCOME_NETTO:
		return "ARTICLE_INCOME_NETTO"
	}
	return "ARTICLE_UNKNOWN"
}

func (tcc TestConceptConst) Id() int32 {
	return int32(tcc)
}

func (tcc TestConceptConst) String() string {
	switch tcc {
	case CONCEPT_TIMESHT_WORKING:
		return "CONCEPT_TIMESHT_WORKING"
	case CONCEPT_AMOUNT_BASIS   :
		return "CONCEPT_AMOUNT_BASIS"
	case CONCEPT_AMOUNT_FIXED   :
		return "CONCEPT_AMOUNT_FIXED"
	case CONCEPT_HEALTH_INSBASE :
		return "CONCEPT_HEALTH_INSBASE"
	case CONCEPT_SOCIAL_INSBASE :
		return "CONCEPT_SOCIAL_INSBASE"
	case CONCEPT_HEALTH_INSPAYM :
		return "CONCEPT_HEALTH_INSPAYM"
	case CONCEPT_SOCIAL_INSPAYM :
		return "CONCEPT_SOCIAL_INSPAYM"
	case CONCEPT_TAXING_ADVBASE :
		return "CONCEPT_TAXING_ADVBASE"
	case CONCEPT_TAXING_ADVPAYM :
		return "CONCEPT_TAXING_ADVPAYM"
	case CONCEPT_INCOME_GROSS   :
		return "CONCEPT_INCOME_GROSS"
	case CONCEPT_INCOME_NETTO   :
		return "CONCEPT_INCOME_NETTO"
	}
	return "CONCEPT_UNKNOWN"
}

